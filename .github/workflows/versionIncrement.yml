name: Version Increment

on:
  pull_request:
    branches:
      - main

jobs:
  version-increment:
    runs-on: ubuntu-latest
    if: "contains(github.event.pull_request.title, '[break]') || contains(github.event.pull_request.title, '[feat]') || contains(github.event.pull_request.title, '[fix]')"

    env:
      SPLITSCALE_BOT_PAT: ${{ secrets.SPLITSCALE_BOT_PAT }}
      BOT_SSH: ${{ secrets.BOT_SSH }}
    
    strategy:
      matrix:
        increment-type: [major, minor, patch]
    
    steps:
      - name: Checkout local repository
        uses: actions/checkout@v3
        with:
          token: ${{ env.SPLITSCALE_BOT_PAT }}
          ssh-key: ${{ env.BOT_SSH }}
          
      - name: Checkout to current branch
        run: |
          git checkout ${{ github.event.pull_request.head.ref }}
        
      - name: Determine version increment type
        run: |
          echo "INCREMENT_TYPE=$(echo ${{ github.event.pull_request.title }} | sed -E 's/.*\[break\].*/major/;s/.*\[feat\].*/minor/;s/.*\[fix\].*/patch/')" >> $GITHUB_ENV
    
      - name: Update version
        if: env.INCREMENT_TYPE
        run: |
          chmod +x .ci/update_version.sh     
          bash .ci/update_version.sh ${{ env.INCREMENT_TYPE }} -p "$GITHUB_WORKSPACE/package.json"
          
      - name: Set Committer Identity
        if: env.INCREMENT_TYPE
        run: |
          git config --global user.name "${{ vars.BOT_USERNAME }}"
          git config --global user.email "${{ vars.BOT_EMAIL }}"

      - name: Create version tag
        if: env.INCREMENT_TYPE
        run: |
          VERSION=$(node -p "require('./package.json').version")
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          git tag v${{ env.VERSION }}

      - name: Stage and Commit Changes
        if: env.INCREMENT_TYPE
        run: |
          git add --all
          git commit -m "Version bumped to v${{ env.VERSION }} [skip actions]"

      - name: Push changes to branch
        if: env.INCREMENT_TYPE
        run: |
          git push --tags

